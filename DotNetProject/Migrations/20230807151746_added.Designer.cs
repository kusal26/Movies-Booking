// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetProject.Migrations
{
    [DbContext(typeof(DotNetProjectContext))]
    [Migration("20230807151746_added")]
    partial class added
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotNetProject.Models.Booking", b =>
                {
                    b.Property<int>("Booking_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Booking_Id"));

                    b.Property<DateTime>("BookedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoOfBookedSeats")
                        .HasColumnType("int");

                    b.Property<int>("PricePerEach")
                        .HasColumnType("int");

                    b.Property<int>("Timing_Id")
                        .HasColumnType("int");

                    b.Property<int>("Totalprice")
                        .HasColumnType("int");

                    b.HasKey("Booking_Id");

                    b.HasIndex("Timing_Id");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("DotNetProject.Models.MovieHall", b =>
                {
                    b.Property<int>("HallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HallId"));

                    b.Property<string>("HallLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HallName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalSeat")
                        .HasColumnType("int");

                    b.HasKey("HallId");

                    b.ToTable("MovieHall");
                });

            modelBuilder.Entity("DotNetProject.Models.Movies", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("Cast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MovieId");

                    b.HasIndex("PriceId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("DotNetProject.Models.PricingDetails", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceId"));

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("PriceId");

                    b.ToTable("PricingDetails");
                });

            modelBuilder.Entity("DotNetProject.Models.ShowTiming", b =>
                {
                    b.Property<int>("TimingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimingId"));

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int?>("available_seats")
                        .HasColumnType("int");

                    b.Property<DateTime>("show_datetime")
                        .HasColumnType("datetime2");

                    b.HasKey("TimingId");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.ToTable("ShowTiming");
                });

            modelBuilder.Entity("DotNetProject.Models.Booking", b =>
                {
                    b.HasOne("DotNetProject.Models.ShowTiming", "ShowTiming")
                        .WithMany("bookings")
                        .HasForeignKey("Timing_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShowTiming");
                });

            modelBuilder.Entity("DotNetProject.Models.Movies", b =>
                {
                    b.HasOne("DotNetProject.Models.PricingDetails", "PricingDetails")
                        .WithMany("Movies")
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PricingDetails");
                });

            modelBuilder.Entity("DotNetProject.Models.ShowTiming", b =>
                {
                    b.HasOne("DotNetProject.Models.MovieHall", "MovieHall")
                        .WithMany("Timing")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetProject.Models.Movies", "Movies")
                        .WithMany("showTimings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieHall");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("DotNetProject.Models.MovieHall", b =>
                {
                    b.Navigation("Timing");
                });

            modelBuilder.Entity("DotNetProject.Models.Movies", b =>
                {
                    b.Navigation("showTimings");
                });

            modelBuilder.Entity("DotNetProject.Models.PricingDetails", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("DotNetProject.Models.ShowTiming", b =>
                {
                    b.Navigation("bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
